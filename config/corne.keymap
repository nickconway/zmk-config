#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define COLE    0
#define QWERTY  1
#define GAME    2
#define GAMET   3
#define STENO   4
#define NAVL    5
#define MOUSEL  6
#define MEDIAL  7
#define NUMR    8
#define SYMR    9
#define FUNCR   10
#define EM      11
#define NOTHING 12

&lt {
    quick-tap-ms = <300>;
    retro-tap;
};

&mmv {
    delay-ms = <0>;
    acceleration-exponent=<1>;
    time-to-max-speed-ms = <2000>;
};

&mwh {
    delay-ms = <0>;
    acceleration-exponent=<1>;
    time-to-max-speed-ms = <100>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

#define AS(keycode) &mm##keycode
#define ASR(keycode) &ASMR##keycode
#define ASP(keycode) &ASMP##keycode

#define ASB(keycode) &as LS(keycode) keycode
#define ASBR(keycode) &asr LS(keycode) keycode
#define ASBP(keycode) &asp LS(keycode) keycode

#define SK(KEY) &nk KEY KEY

/ {

    #include "behaviors.dtsi"
    #include "macros.dtsi"
    #include "combos.dtsi"
    #include "autoshift.dtsi"

    keymap {

        compatible = "zmk,keymap";

        default_layer {
            label = "  COLE  ";
            bindings = <
                &m1         &wing   AS(W)  AS(F)   AS(P)   AS(B)           AS(J) AS(L)     AS(U)       AS(Y)      AS(QUOT)   AS(MINUS)
                &ptd        AS(A)   AS(R)  AS(S)   AS(T)   AS(G)           AS(M) &atn      AS(E)       AS(I)       AS(O)       &rptd
                AS(GRAVE)   AS(Z)   AS(X)  AS(C)   &dcv    &vcd            AS(K) AS(H)     AS(CMMA)    AS(DOT)    AS(SLASH)  AS(SEMI)
                        &lt FUNCR ESC &lt NUMR BKSP &lt SYMR DEL           &lt MEDIAL ENTER &lt NAVL SPC &lt MOUSEL TAB
            >;
        };

        qwerty {
            label = " QWER  ";
            bindings = <
                &kp TAB     &kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U &kp I     &kp O   &kp P     &kp BKSP
                &tog QWERTY &kp A &kp S &kp D &kp F &kp G           &kp H &kp J &kp K     &kp L   &kp SEMI  &kp ENTER
                &kp LSHFT   &kp Z &kp X &kp C &kp V &kp B           &kp N &kp M &kp CMMA  &kp DOT &kp FSLH  &kp RSFT
                                     &trans &trans &trans           &trans &trans &trans
            >;
        };

        game {
            label = " GAME  ";
            bindings = <
                &bht TAB ESC    &kp Q  &kp W  &kp F  &kp P  &kp B          &trans  &trans  &trans  &trans  &trans  &trans
                &kp MINUS       &kp A  &kp R  &kp S  &kp T  &kp G          &trans  &trans  &trans  &trans  &trans  &trans
                &kp GRAVE       &kp Z  &kp X  &kp C  &kp D  &kp V          &trans  &trans  &trans  &trans  &trans  &trans
                                       &kp LCTRL &kp SPC &kp LALT          &m2  &trans  &trans
            >;
        };

        gametype {
            label = " GAMET ";
            bindings = <
                &m1         &wing   AS(W)  AS(F)   AS(P)   AS(B)           AS(J) AS(L) AS(U)       AS(Y)      AS(QUOT)   AS(MINUS)
                &ptd        AS(A)  AS(R)  AS(S)   AS(T)   AS(G)           AS(M) &atn  AS(E)       &ati        AS(O)      &rptd
                AS(GRAVE)  AS(Z)  AS(X)  AS(C)   &dcv    &vcd            AS(K) AS(H) AS(CMMA)    AS(DOT)    &sltd       AS(SEMI)
                        &lt FUNCR ESC &lt NUMR BKSP &lt SYMR DEL            &m2 &lt NAVL SPC &lt MOUSEL TAB
            >;
        };

        steno {
            label = "  STEN  ";
            bindings = <
                &trans   &kp N1 &kp N2   &kp N3  &kp N4  &kp N5          &kp N6  &kp N7 &kp N8   &kp N9  &kp N0      &tog STENO
                &trans   &kp Q  &kp W    &kp E   &kp R   &kp T           &kp Y   &kp U &kp I     &kp O   &kp P       &kp LBKT
                &trans   &kp A  &kp S    &kp D   &kp F   &kp G           &kp H   &kp J &kp K     &kp L   &kp SEMI    &kp QUOT
                                             &kp C &kp C &kp V           &kp N   &kp M &kp M
            >;
        };

        nav_layer {
            label = "  NAVI  ";
            bindings = <
                &m3     ASB(PG_UP)   ASB(HOME)    ASB(UP)           ASB(END)     ASB(INSERT)           &reset  &trans            &trans   &trans      &trans      &bootloader
                &trans  ASB(PG_DN)   ASB(LEFT)    ASB(DOWN)         ASB(RIGHT)   &caps_word           &sleep  SK(LCTL)          SK(LALT) SK(LGUI)    SK(LSHIFT)  &trans
                &trans  &kp LC(Z)   &kp LC(X)   &kp LC(LS(TAB))  &kp LC(TAB) &kp INSERT           &trans  &kp LG(LC(RIGHT)) &trans   &trans      &trans      &trans
                                                           &tog GAME &trans &tog QWERTY           &tog STENO &trans  &tog EM
            >;
        };

        mouse {
            label = "  MOUS  ";
            bindings = <
                &trans  &trans  &trans                  &mmv MOVE_VERT(-3000)   &trans                  &trans                 &trans  &trans           &mwh SCROLL_UP      &trans              &trans  &trans
                &trans  &trans  &mmv MOVE_HOR(-3000)    &mmv MOVE_VERT(3000)    &mmv MOVE_HOR(3000)     &trans                 &trans  &mwh SCROLL_LEFT &mwh SCROLL_DOWN    &mwh SCROLL_RIGHT   &trans  &trans
                &trans  &trans  &trans                  &trans                  &trans                  &trans                 &trans  &trans           &trans              &trans              &trans  &trans
                                                                               &mkp RCLK  &mkp LCLK  &mkp RCLK                 &trans  &trans  &trans
            >;
        };

        media {
            label = "  MDIA  ";
            bindings = <
                &trans          &trans          &trans          &kp C_VOL_UP    &trans          &trans                       &trans  &trans  &kp C_BRI_UP   &trans  &bt BT_CLR  &trans
                &out OUT_TOG    &out OUT_TOG    &kp C_PREV      &kp C_VOL_DN    &kp C_NEXT      &trans                       &trans  &trans  &kp C_BRI_DN   &trans  &trans      &trans
                &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                 &trans  &trans  &trans         &trans  &trans      &trans
                                                                              &kp C_MUTE &kp C_PP &kp C_STOP                 &trans  &trans  &trans
            >;
        };

        number {
            label = "  NUM   ";
            bindings = <
                &bootloader &trans      &trans      &trans      &trans              &reset                 AS(LBKT)     AS(N7)  AS(N8)  AS(N9)  AS(RBKT)    &trans
                &trans      SK(LSHIFT)  SK(LGUI)    SK(LALT)    SK(LCTRL)           &trans                 AS(EQUAL)    AS(N4)  AS(N5)  AS(N6)   AS(SEMI)     &trans
                &trans      &trans      &trans      &trans      &kp LG(LC(LEFT))    &trans                 AS(GRAVE)    AS(N1)  AS(N2)  AS(N3)  AS(BSLH)    &trans
                                                                    &trans  &trans  &trans                 AS(MINUS) AS(N0)  AS(MINUS)
            >;
        };

        symbol {
            label = "  SYMB  ";
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans                 &trans  &trans  &trans
            >;
        };

        function {
            label = "  FUNC  ";
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  AS(F7)  AS(F8)  AS(F9)  AS(F12)  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  AS(F4)  AS(F5)  AS(F6)  AS(F11)  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                 &trans  AS(F1)  AS(F2)  AS(F3)  AS(F10)  &trans
                                        &trans  &trans  &trans                 &trans  &trans  &trans
            >;
        };

        em {
            label = "EM     <3";
            bindings = <
                &kp TAB     &kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U &kp I     &kp O   &kp P     &kp BKSP
                &tog EM     &kp A &kp S &kp D &kp F &kp G           &kp H &kp J &kp K     &kp L   &kp SEMI  &kp ENTER
                &kp LSHFT   &kp Z &kp X &kp C &kp V &kp B           &kp N &kp M &kp CMMA  &kp DOT &kp FSLH  &kp RSFT
                  &lt FUNCR ESC &lt NUMR SPC &lt SYMR DEL           &lt MEDIAL ENTER &lt NAVL BKSP &lt MOUSEL TAB
            >;
        };

        nothing {
            label = "  NOTH  ";
            bindings = <
                &none   &none   &none   &none   &none   &none                  &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none                  &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none                  &none   &none   &none   &none   &none   &none
                                        &none   &none   &none                  &none   &none   &none
            >;
        };

    };

};
