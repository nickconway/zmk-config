bht: balanced_hold_tap {
    compatible = "zmk,behavior-hold-tap";
    label = "BALANCED_HOLD_TAP";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    bindings = <&kp>, <&kp>;
};

altq: altq {

    compatible = "zmk,behavior-mod-morph";
    label = "ALT_Q";
    #binding-cells = <0>;
    bindings = <&asmmQ>, <&kp F4>;
    mods = <(MOD_LALT)>;

};

wing: wing {

    compatible = "zmk,behavior-mod-morph";
    label = "WIN_GRAVE";
    #binding-cells = <0>;
    bindings = <&altq>, <&kp GRAVE>;
    mods = <(MOD_LGUI)>;

};

atn: atn {

    compatible = "zmk,behavior-mod-morph";
    label = "ALT_TAB_N";
    #binding-cells = <0>;
    bindings = <&asmmN>, <&as LS(TAB) TAB>;
    mods = <(MOD_LALT)>;

};

dcv: dcv {

    compatible = "zmk,behavior-mod-morph";
    label = "D_C_V";
    #binding-cells = <0>;
    bindings = <&asmmD>, <&asmmV>;
    mods = <(MOD_LCTL)>;

};

vcd: vcd {

    compatible = "zmk,behavior-mod-morph";
    label = "V_C_D";
    #binding-cells = <0>;
    bindings = <&asmmV>, <&asmmD>;
    mods = <(MOD_LCTL)>;

};

nk: not_so_sticky_key {
    compatible = "zmk,behavior-hold-tap";
    label = "not so sticky key";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "tap-unless-interrupted";
    bindings = <&kp>, <&sk>;
};

ptd: ptd {
    compatible = "zmk,behavior-tap-dance";
    label = "ptd";
    #binding-cells = <0>;
    tapping-term-ms = <TAPPING_TERM>;
    bindings = <&kp LPAR>, <&kp LBKT>, <&kp LBRC>;
};

rptd: rptd {
    compatible = "zmk,behavior-tap-dance";
    label = "rptd";
    #binding-cells = <0>;
    tapping-term-ms = <TAPPING_TERM>;
    bindings = <&kp RPAR>, <&kp RBKT>, <&kp RBRC>;
};

sltd: sltd {
    compatible = "zmk,behavior-tap-dance";
    label = "sltd";
    #binding-cells = <0>;
    tapping-term-ms = <TAPPING_TERM>;
    bindings = <&kp FSLH>, <&kp BSLH>;
};

as: auto_shift {

    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

};

asr: auto_shift_ring {

    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT_RING";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM_RING>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

};

asp: auto_shift_pinky {

    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT_PINKY";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM_PINKY>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

};

lhm: lhm {

    compatible = "zmk,behavior-hold-tap";
    label = "HOMEROW_MODS_LEFT";
    #binding-cells = <2>;
    tapping-term-ms = <180>;
    quick-tap-ms = <300>;
    flavor = "tap-unless-interrupted";
    bindings = <&nk>, <&kp>;
    //hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
    retro-tap;

};

rhm: rhm {

    compatible = "zmk,behavior-hold-tap";
    label = "HOMEROW_MODS_RIGHT";
    #binding-cells = <2>;
    tapping-term-ms = <180>;
    quick-tap-ms = <300>;
    flavor = "tap-unless-interrupted";
    bindings = <&nk>, <&kp>;
    //hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
    retro-tap;

};

#define SK(KEY) &nk KEY KEY
