#define ASM(letter, tapping_time) \
    hu##letter: hu##letter { \
        compatible = "zmk,behavior-hold-tap"; \
        label = ZMK_MACRO_STRINGIFY(hu##letter); \
        #binding-cells = <2>; \
        flavor = "tap-preferred"; \
        tapping-term-ms = <tapping_time>; \
        quick-tap-ms = <QUICK_TAP_TERM>; \
        bindings = <&ASB##letter>, <&none>; \
    }; \
 \
    asmm##letter: asmm##letter { \
        compatible = "zmk,behavior-mod-morph"; \
        label = ZMK_MACRO_STRINGIFY(asmm##letter); \
        #binding-cells = <0>; \
        bindings = <&kp letter>, <&as LS(##letter) ##letter>; \
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>; \
    }; \
 \
    ASM##letter: ASM##letter { \
        compatible = "zmk,behavior-macro"; \
        label = ZMK_MACRO_STRINGIFY(ASM##letter); \
        #binding-cells = <0>; \
        tap-ms = <1>; \
        wait-ms = <1>; \
        bindings = \
            <&macro_tap &kp letter>, \
            <&macro_press &hu##letter 0 0>, \
            <&macro_pause_for_release>, \
            <&macro_release &hu##letter 0 0> \
        ; \
    }; \
 \
    ASB##letter: ASB##letter { \
        compatible = "zmk,behavior-macro"; \
        label = ZMK_MACRO_STRINGIFY(ASB##letter); \
        #binding-cells = <0>; \
        tap-ms = <1>; \
        wait-ms = <1>; \
        bindings = \
            <&macro_tap &kp BSPC>, \
            <&macro_press &kp LS(letter)>, \
            <&macro_pause_for_release>, \
            <&macro_release &kp LS(letter)> \
        ; \
    }; \
 \
    astd##letter: astd##letter { \
        compatible = "zmk,behavior-tap-dance"; \
        label = ZMK_MACRO_STRINGIFY(astd##letter); \
        #binding-cells = <0>; \
        tapping-term-ms = <##tapping_time>; \
        bindings = <&asmm##letter>, <&kp letter>; \
        trigger-each-binding; \
    };

#define AS(keycode) &as LS(keycode) keycode
#define ASR(keycode) &asr LS(keycode) keycode
#define ASP(keycode) &asp LS(keycode) keycode

/* #define AS(keycode) &asmm##keycode */

ASM(Q, TAPPING_TERM_PINKY)
ASM(W, TAPPING_TERM_RING)
ASM(F, TAPPING_TERM)
ASM(P, TAPPING_TERM)
ASM(B, TAPPING_TERM)
ASM(J, TAPPING_TERM)
ASM(L, TAPPING_TERM)
ASM(U, TAPPING_TERM)
ASM(Y, TAPPING_TERM_RING)
ASM(QUOT, TAPPING_TERM_PINKY)
ASM(A, TAPPING_TERM_PINKY)
ASM(R, TAPPING_TERM_RING)
ASM(S, TAPPING_TERM)
ASM(T, TAPPING_TERM)
ASM(G, TAPPING_TERM)
ASM(M, TAPPING_TERM)
ASM(N, TAPPING_TERM)
ASM(E, TAPPING_TERM)
ASM(I, TAPPING_TERM_RING)
ASM(O, TAPPING_TERM_PINKY)
ASM(Z, TAPPING_TERM_PINKY)
ASM(X, TAPPING_TERM_RING)
ASM(C, TAPPING_TERM)
ASM(D, TAPPING_TERM)
ASM(V, TAPPING_TERM)
ASM(K, TAPPING_TERM)
ASM(H, TAPPING_TERM)
ASM(CMMA, TAPPING_TERM)
ASM(DOT, TAPPING_TERM_RING)
ASM(SLASH, TAPPING_TERM_PINKY)
ASM(BSLH, TAPPING_TERM)
ASM(MINUS, TAPPING_TERM)
ASM(SEMI, TAPPING_TERM)
ASM(GRAVE, TAPPING_TERM)
ASM(LBKT, TAPPING_TERM)
ASM(RBKT, TAPPING_TERM)
ASM(EQUAL, TAPPING_TERM)
ASM(TAB, TAPPING_TERM)
ASM(UP, TAPPING_TERM)
ASM(LEFT, TAPPING_TERM)
ASM(DOWN, TAPPING_TERM)
ASM(RIGHT, TAPPING_TERM)
ASM(INSERT, TAPPING_TERM)
ASM(PG_UP, TAPPING_TERM)
ASM(PG_DN, TAPPING_TERM)
ASM(HOME, TAPPING_TERM)
ASM(END, TAPPING_TERM)
ASM(N0, TAPPING_TERM)
ASM(N1, TAPPING_TERM)
ASM(N2, TAPPING_TERM)
ASM(N3, TAPPING_TERM)
ASM(N4, TAPPING_TERM)
ASM(N5, TAPPING_TERM)
ASM(N6, TAPPING_TERM)
ASM(N7, TAPPING_TERM)
ASM(N8, TAPPING_TERM)
ASM(N9, TAPPING_TERM)
ASM(F1, TAPPING_TERM)
ASM(F2, TAPPING_TERM)
ASM(F3, TAPPING_TERM)
ASM(F4, TAPPING_TERM)
ASM(F5, TAPPING_TERM)
ASM(F6, TAPPING_TERM)
ASM(F7, TAPPING_TERM)
ASM(F8, TAPPING_TERM)
ASM(F9, TAPPING_TERM)
ASM(F10, TAPPING_TERM)
ASM(F11, TAPPING_TERM)
ASM(F12, TAPPING_TERM)

#define HRM(letter, mod, tapping_time) \
    hras##letter: hras##letter { \
        compatible = "zmk,behavior-hold-tap"; \
        label = ZMK_MACRO_STRINGIFY(HOME_ROW_AS_##letter); \
        #binding-cells = <2>; \
        flavor = "balanced"; \
        tapping-term-ms = <tapping_time>; \
        quick-tap-ms = <QUICK_TAP_TERM>; \
        bindings = <&kp>, <&kp>; \
        retro-tap; \
        retro-tap-behavior = "KEY_PRESS"; \
        retro-tap-param1 = <LS(letter)>; \
    }; \
 \
    hrt##letter: hrt##letter { \
        compatible = "zmk,behavior-tap-dance"; \
        label = ZMK_MACRO_STRINGIFY(hrt##letter); \
        #binding-cells = <0>; \
        tapping-term-ms = <tapping_time>; \
        bindings = <&hras##letter mod letter>, <&kp letter>; \
        trigger-each-binding; \
    };

HRM(A, LSHIFT, TAPPING_TERM_PINKY)
HRM(R, LGUI, TAPPING_TERM_RING)
HRM(S, LALT, TAPPING_TERM)
HRM(T, LCTL, TAPPING_TERM)
HRM(N, RCTL, TAPPING_TERM)
HRM(E, RALT, TAPPING_TERM)
HRM(I, RGUI, TAPPING_TERM_RING)
HRM(O, RSHIFT, TAPPING_TERM_PINKY)

#define HRA &hrasA LSHIFT A
#define HRR &hrasR LGUI R
#define HRS &hrasS LALT S
#define HRT &hrasT LCTL T
#define HRN &hrasN RCTL N
#define HRE &hrasE RALT E
#define HRI &hrasI RGUI I
#define HRO &hrasO RSHIFT O
