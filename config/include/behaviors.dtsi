#define SK(KEY) &nk KEY KEY

#define RMODS (MOD_RGUI|MOD_RSFT|MOD_RALT|MOD_RCTL)
#define LMODS (MOD_LGUI|MOD_LSFT|MOD_LALT|MOD_LCTL)
#define ALLMODS (MOD_LGUI|MOD_LSFT|MOD_LALT|MOD_LCTL|MOD_RGUI|MOD_RSFT|MOD_RALT|MOD_RCTL)

as: auto_shift {
    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    bindings = <&kp &kp>;
};

asr: auto_shift_ring {
    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT_RING";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM_RING>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp &kp>;
};

asp: auto_shift_pinky {
    compatible = "zmk,behavior-hold-tap";
    label = "AUTO_SHIFT_PINKY";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM_PINKY>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp &kp>;
};

nk: not_so_sticky_key {
    compatible = "zmk,behavior-hold-tap";
    label = "not so sticky key";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp &sk>;
};

hrm: hrm {
    compatible = "zmk,behavior-hold-tap";
    label = "HOME_ROW_MOD";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    bindings = <&kp &kp>;
};

swap: swap {
    compatible = "zmk,behavior-tri-state";
    label = "SWAPPER";
    #binding-cells = <0>;
    bindings = <&kt LALT AS(TAB) &kt LALT>;
    ignored-key-positions = <LT2 LM1 LM2 LM3>;
};

leftmm1: leftmm1 {
    compatible = "zmk,behavior-mod-morph";
    label = "leftmm1";
    #binding-cells = <0>;
    bindings = <&leftmm2 &kp C_VOL_DN>;
    mods = <MOD_LCTL>;
};

leftmm2: leftmm2 {
    compatible = "zmk,behavior-mod-morph";
    label = "leftmm2";
    #binding-cells = <0>;
    bindings = <&kp LEFT &kp LG(LC(LEFT))>;
    mods = <MOD_LALT>;
};

rightmm1: rightmm1 {
    compatible = "zmk,behavior-mod-morph";
    label = "rightmm1";
    #binding-cells = <0>;
    bindings = <&rightmm2 &kp C_VOL_UP>;
    mods = <MOD_LCTL>;
};

rightmm2: rightmm2 {
    compatible = "zmk,behavior-mod-morph";
    label = "rightmm2";
    #binding-cells = <0>;
    bindings = <&kp RIGHT &kp LG(LC(RIGHT))>;
    mods = <MOD_LALT>;
};

upmm1: upmm1 {
    compatible = "zmk,behavior-mod-morph";
    label = "upmm1";
    #binding-cells = <0>;
    bindings = <&upmm2 &kp C_PREV>;
    mods = <MOD_RCTL>;
};

upmm2: upmm2 {
    compatible = "zmk,behavior-mod-morph";
    label = "upmm2";
    #binding-cells = <0>;
    bindings = <&upmm3 &kp C_BRI_DN>;
    mods = <MOD_RALT>;
};

upmm3: upmm3 {
    compatible = "zmk,behavior-mod-morph";
    label = "upmm3";
    #binding-cells = <0>;
    bindings = <&kp UP &mwh SCROLL_DOWN>;
    mods = <MOD_RSFT>;
};

downmm1: downmm1 {
    compatible = "zmk,behavior-mod-morph";
    label = "downmm1";
    #binding-cells = <0>;
    bindings = <&downmm2 &kp C_NEXT>;
    mods = <MOD_RCTL>;
};

downmm2: downmm2 {
    compatible = "zmk,behavior-mod-morph";
    label = "downmm2";
    #binding-cells = <0>;
    bindings = <&downmm3 &kp C_BRI_UP>;
    mods = <MOD_RALT>;
};

downmm3: downmm3 {
    compatible = "zmk,behavior-mod-morph";
    label = "downmm3";
    #binding-cells = <0>;
    bindings = <&kp DOWN &mwh SCROLL_UP>;
    mods = <MOD_RSFT>;
};

bspcdel: bspcdel {
    compatible = "zmk,behavior-mod-morph";
    label = "bspcdel";
    #binding-cells = <0>;
    bindings = <&lt NUM BSPC &lt NUM DELETE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    masked-mods = <(MOD_RSFT)>;
};

spcmin: spcmin {
    compatible = "zmk,behavior-mod-morph";
    label = "navspcmin";
    #binding-cells = <0>;
    bindings = <&lt NAV SPC &lt NAV MINUS>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    masked-mods = <(MOD_RSFT)>;
};

enc: enc {
    compatible = "zmk,behavior-sensor-rotate";
    label = "ENCODER";
    #sensor-binding-cells = <0>;
    bindings = <&rightmm1 &leftmm1>;
};

enc2: enc2 {
    compatible = "zmk,behavior-sensor-rotate";
    label = "ENCODER2";
    #sensor-binding-cells = <0>;
    bindings = <&downmm1 &upmm1>;
};

none_enc: none_enc {
    compatible = "zmk,behavior-sensor-rotate";
    label = "NONE_ENCODER";
    #sensor-binding-cells = <0>;
    bindings = <&none &none>;
};

ldturbo: ldturbo {
    compatible = "zmk,behavior-turbo-key";
    label = "ldturbo";
    #binding-cells = <0>;
    wait-ms = <60000>;
    bindings = <&work_awake>;
    toggle-term-ms = <TAPPING_TERM>;
};

leaders: leaders {
    compatible = "zmk,behavior-tap-dance";
    label = "leaders";
    #binding-cells = <0>;
    tapping-term-ms = <QUICK_TAP_TERM>;
    bindings = <&leader &leader2 &leader3>;
};
